2024-10-15T13:22:46.692516Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("gnss"), name: None, description: None, env: Some({"DEVICE_INDEX": Integer(0)}), deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../dora-hardware/vendors/gnss/CGI_610/build/drive_dora", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("DoraNavSatFix"), DataId("DoraQuaternionStamped"), DataId("DoraSentence"), DataId("DoraTwistStamped")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/nvidia/disk/dora_project/code0722/sensing/gnss_poser"}: dora_coordinator::run: successfully spawned dataflow `01929058-6b1f-7d8b-8e5d-ebe918cae94f`
2024-10-15T13:22:46.742733Z  INFO dora_coordinator: removed machine id:  from dataflow: 01929058-6b1f-7d8b-8e5d-ebe918cae94f
2024-10-16T05:04:09.703030Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("gnss"), name: None, description: None, env: Some({"DEVICE_INDEX": Integer(0)}), deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../dora-hardware/vendors/gnss/CGI_610/build/drive_dora", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("DoraNavSatFix"), DataId("DoraQuaternionStamped"), DataId("DoraSentence"), DataId("DoraTwistStamped")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/nvidia/disk/dora_project/code0722/sensing/gnss_poser"}: dora_coordinator::run: successfully spawned dataflow `019293b6-47dd-756f-8517-0d724a95467d`
2024-10-16T05:05:13.980646Z  INFO dora_coordinator: successfully send stop dataflow `019293b6-47dd-756f-8517-0d724a95467d` to all daemons
2024-10-16T05:05:14.596704Z  INFO dora_coordinator: removed machine id:  from dataflow: 019293b6-47dd-756f-8517-0d724a95467d
2024-10-16T05:05:14.832535Z ERROR dora_coordinator::control: failed to receive incoming message
2024-10-16T05:06:03.175933Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("gnss"), name: None, description: None, env: Some({"DEVICE_INDEX": Integer(0)}), deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../dora-hardware/vendors/gnss/CGI_610/build/drive_dora", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("DoraNavSatFix"), DataId("DoraQuaternionStamped"), DataId("DoraSentence"), DataId("DoraTwistStamped")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/nvidia/disk/dora_project/code0722/sensing/gnss_poser"}: dora_coordinator::run: successfully spawned dataflow `019293b8-0324-7e33-9efe-642e09d5ecf2`
2024-10-16T05:06:37.028761Z  INFO dora_coordinator: successfully send stop dataflow `019293b8-0324-7e33-9efe-642e09d5ecf2` to all daemons
2024-10-16T05:06:50.823196Z  INFO dora_coordinator: Received destroy command
2024-10-16T05:06:50.823805Z  INFO dora_coordinator: successfully send stop dataflow `019293b8-0324-7e33-9efe-642e09d5ecf2` to all daemons
2024-10-16T05:06:50.824270Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-16T05:06:50.824709Z  INFO dora_coordinator: stopped
2024-10-16T05:06:50.824922Z ERROR dora_coordinator::control: failed to send reply
2024-10-16T05:07:05.923990Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("gnss"), name: None, description: None, env: Some({"DEVICE_INDEX": Integer(0)}), deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../dora-hardware/vendors/gnss/CGI_610/build/drive_dora", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("DoraNavSatFix"), DataId("DoraQuaternionStamped"), DataId("DoraSentence"), DataId("DoraTwistStamped")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("gnss_poser"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../sensing/gnss_poser/build/gnss_poser_core", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("DoraNavSatFix"): Input { mapping: User(UserInputMapping { source: NodeId("gnss"), output: DataId("DoraNavSatFix") }), queue_size: None }}, outputs: {DataId("DoraNavSatFix"), DataId("DoraQuaternionStamped"), DataId("DoraSentence"), DataId("DoraTwistStamped")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("gnss_ekf"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../localization/ekf_localizer/gnss_ekf", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("DoraNavSatFix"): Input { mapping: User(UserInputMapping { source: NodeId("gnss_poser"), output: DataId("DoraNavSatFix") }), queue_size: None }, DataId("DoraQuaternionStamped"): Input { mapping: User(UserInputMapping { source: NodeId("gnss"), output: DataId("DoraQuaternionStamped") }), queue_size: None }, DataId("tick"): Input { mapping: Timer { interval: 50ms }, queue_size: None }}, outputs: {DataId("DoraGnssPose")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("pub_road"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "/home/nvidia/disk/indoorslam/sensing/gnss_poser/pubroad", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("road_lane")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("road_lane_publisher_node"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../map/road_line_publisher/build/road_lane_publisher_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("DoraGnssPose"): Input { mapping: User(UserInputMapping { source: NodeId("gnss_ekf"), output: DataId("DoraGnssPose") }), queue_size: None }, DataId("road_lane"): Input { mapping: User(UserInputMapping { source: NodeId("pub_road"), output: DataId("road_lane") }), queue_size: None }}, outputs: {DataId("cur_pose_all")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("task_pub_node"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../planning/mission_planning/task_pub/build/task_pub_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("road_attri_msg")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("task_exc_node"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../planning/mission_planning/task_exc/build/task_exc_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("cur_pose_all"): Input { mapping: User(UserInputMapping { source: NodeId("road_lane_publisher_node"), output: DataId("cur_pose_all") }), queue_size: None }, DataId("road_attri_msg"): Input { mapping: User(UserInputMapping { source: NodeId("task_pub_node"), output: DataId("road_attri_msg") }), queue_size: None }}, outputs: {DataId("SetSpeed_service"), DataId("routing_service")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("planning"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../planning/routing_planning/build/routing_planning_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("SetSpeed_service"): Input { mapping: User(UserInputMapping { source: NodeId("task_exc_node"), output: DataId("SetSpeed_service") }), queue_size: None }, DataId("VehicleStat"): Input { mapping: User(UserInputMapping { source: NodeId("control"), output: DataId("VehicleStat") }), queue_size: None }, DataId("cur_pose_all"): Input { mapping: User(UserInputMapping { source: NodeId("road_lane_publisher_node"), output: DataId("cur_pose_all") }), queue_size: None }, DataId("road_attri_msg"): Input { mapping: User(UserInputMapping { source: NodeId("task_pub_node"), output: DataId("road_attri_msg") }), queue_size: None }, DataId("road_lane"): Input { mapping: User(UserInputMapping { source: NodeId("pub_road"), output: DataId("road_lane") }), queue_size: None }, DataId("routing_service"): Input { mapping: User(UserInputMapping { source: NodeId("task_exc_node"), output: DataId("routing_service") }), queue_size: None }}, outputs: {DataId("Request"), DataId("raw_path")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("control"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../control/vehicle_control/vehicle_chassis_n3/build/vehicle_chassis_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("SteeringCmd"): Input { mapping: User(UserInputMapping { source: NodeId("latcontrol"), output: DataId("SteeringCmd") }), queue_size: None }, DataId("TrqBreCmd"): Input { mapping: User(UserInputMapping { source: NodeId("lon_control"), output: DataId("TrqBreCmd") }), queue_size: None }}, outputs: {DataId("VehicleStat")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("lon_control"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../control/vehicle_control/lon_controller/build/lon_controller_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("Request"): Input { mapping: User(UserInputMapping { source: NodeId("planning"), output: DataId("Request") }), queue_size: None }}, outputs: {DataId("TrqBreCmd")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("latcontrol"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../control/vehicle_control/lat_controller/build/lat_controller_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("VehicleStat"): Input { mapping: User(UserInputMapping { source: NodeId("control"), output: DataId("VehicleStat") }), queue_size: None }, DataId("raw_path"): Input { mapping: User(UserInputMapping { source: NodeId("planning"), output: DataId("raw_path") }), queue_size: None }}, outputs: {DataId("SteeringCmd")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/nvidia/disk/dora_project/code0722/sensing/gnss_poser"}: dora_coordinator::run: successfully spawned dataflow `019293b8-f7fa-7bc3-bcc3-f68f7f4b9b00`
2024-10-16T05:07:07.334243Z  INFO dora_coordinator: removed machine id:  from dataflow: 019293b8-f7fa-7bc3-bcc3-f68f7f4b9b00
2024-10-16T05:08:35.949628Z  INFO dora_coordinator: Received destroy command
2024-10-16T05:08:35.950339Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-16T05:08:35.950659Z  INFO dora_coordinator: stopped
2024-10-16T05:08:42.442070Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("gnss"), name: None, description: None, env: Some({"DEVICE_INDEX": Integer(0)}), deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../dora-hardware/vendors/gnss/CGI_610/build/drive_dora", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 20ms }, queue_size: None }}, outputs: {DataId("DoraNavSatFix"), DataId("DoraQuaternionStamped"), DataId("DoraSentence"), DataId("DoraTwistStamped")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/nvidia/disk/dora_project/code0722/sensing/gnss_poser"}: dora_coordinator::run: successfully spawned dataflow `019293ba-7145-7bb1-b779-06bab68508d9`
2024-10-16T05:09:35.515844Z  INFO dora_coordinator: successfully send stop dataflow `019293ba-7145-7bb1-b779-06bab68508d9` to all daemons
2024-10-16T05:09:36.255078Z  INFO dora_coordinator: removed machine id:  from dataflow: 019293ba-7145-7bb1-b779-06bab68508d9
2024-10-16T05:09:40.001613Z  INFO dora_coordinator: Received destroy command
2024-10-16T05:09:40.002694Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-16T05:09:40.002973Z  INFO dora_coordinator: stopped
2024-10-16T05:13:51.077583Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("controltest"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "controldata", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("tick"): Input { mapping: Timer { interval: 100ms }, queue_size: None }}, outputs: {DataId("road_lane")} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("road"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: Some(CustomNode { source: "../../planning/routing_planning/build/routing_planning_node", args: None, envs: None, build: None, send_stdout_as: None, run_config: NodeRunConfig { inputs: {DataId("road_lane"): Input { mapping: User(UserInputMapping { source: NodeId("controltest"), output: DataId("road_lane") }), queue_size: None }}, outputs: {} } }), operator: None, path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/home/nvidia/disk/dora_project/code0722/sensing/gnss_poser"}: dora_coordinator::run: successfully spawned dataflow `019293bf-26db-77fa-97aa-f319f73f24fd`
2024-10-16T05:13:51.552261Z  INFO dora_coordinator: removed machine id:  from dataflow: 019293bf-26db-77fa-97aa-f319f73f24fd
2024-10-16T05:14:03.526740Z  INFO dora_coordinator: Received destroy command
2024-10-16T05:14:03.527466Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-16T05:14:03.527772Z  INFO dora_coordinator: stopped
